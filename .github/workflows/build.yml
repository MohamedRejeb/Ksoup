name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  check:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup gradle
        uses: gradle/gradle-build-action@v2

      - name: Unit tests
        continue-on-error: false
        run: ./gradlew allTests

  build:
    runs-on: ${{ matrix.config.os }}
    name: Build ${{ matrix.config.target }}
    needs: check
    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup gradle
        uses: gradle/gradle-build-action@v2

#  release:
#    if: ${{ github.event_name != 'pull_request' }}
#    runs-on: macos-latest
#    needs:
#      - build
#    environment:
#      name: github-pages
#      url: ${{ steps.deployment.outputs.page_url }}
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Setup JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      - name: Setup gradle
#        uses: gradle/gradle-build-action@v2
#
#      - name: Setup Pages
#        uses: actions/configure-pages@v3
#
#      - name: Write secrets to local.properties
#        if: ${{ github.event_name != 'pull_request' }}
#        run: |
#          echo sonatypeUsername="${SONATYPE_USERNAME}" >> "local.properties"
#          echo sonatypePassword="${SONATYPE_PASSWORD}" >> "local.properties"
#          echo gpgKeyPassword="${GPG_KEY_PASSWORD}" >> "local.properties"
#          echo gpgKeySecret="${GPG_KEY_SECRET}" >> "local.properties"
#        env:
#          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
#          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
#          GPG_KEY_PASSWORD: ${{ secrets.GPG_KEY_PASSWORD }}
#          GPG_KEY_SECRET: ${{ secrets.GPG_KEY_SECRET }}
#
#      - name: Release to sonatype
#        run: ./gradlew publishAllPublicationsToMavenRepository
#
#      - name: Generate docs with dokka
#        run: ./gradlew dokkaHtmlMultiModule
#
#      - name: Upload artifact
#        uses: actions/upload-pages-artifact@v1
#        with:
#          path: ${{ github.workspace }}/build/dokka/htmlMultiModule
#
#      - name: Release to GitHub Pages
#        id: deployment
#        uses: actions/deploy-pages@v1